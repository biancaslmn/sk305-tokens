// Material Design Palette Sketch Styles Generation
// Using Puzzle Tokens Sketch plugin and SASS
// version 1.0.1 by Marcelo Paiva (gh: mpaiva) and Juan Alvarado (gh: jalvarado91)


// Required SASS modules:
@use "sass:map";     // access values in arrays
@use "sass:color";   // color manipulation

// Dependencies:
@import "../../../styles/helpers/constants";
@import "../../../styles/helpers/functions";
@import "../../../styles/helpers/tokens";



  $branding: (
    name: branding,
    tokens: (
      primary:                      $sk305-primary,
      primaryLighter:               $sk305-primaryLighter,
      primaryLight:                 $sk305-primaryLight,
      primaryDark:                  $sk305-primaryDark,
      primaryDarker:                $sk305-primaryDarker
    )
  );

  $accent: (
    name: accent,
    tokens: (
      secondary:                    $sk305-secondary,
      secondaryLighter:             $sk305-secondaryLighter,
      secondaryLight:               $sk305-secondaryLight,
      secondaryDark:                $sk305-secondaryDark,
      secondaryDarker:              $sk305-secondaryDarker
    )
  );

  $neutral: (
    name: neutral,
    tokens: (
      paper:                        $sk305-paper,
      paperLighter:                 $sk305-paperLighter,
      paperLight:                   $sk305-paperLight,
      paperDark:                    $sk305-paperDark,
      paperDarker:                  $sk305-paperDarker
    )
  );

  $functional: (
    name: functional,
    tokens: (
      success:                      $sk305-success,
      warning:                      $sk305-warning,
      danger:                       $sk305-danger,
      dark:                         $sk305-dark,
      light:                        $sk305-light,
      link:                         $sk305-link
    )
  );

  $catColors: $branding, $accent, $neutral, $functional;

  @mixin colors($map) {
    @each $key, $val in $map {
      .#{$key} {
        // Rules
        background-color: #{$val} ;
      }
    }
  }


.colors {
  @each $catValue in $catColors {
    .#{map-get($catValue, name)} { 
      @include colors(#{map-get($catValue, tokens)});      
    }   
  }
} 

  

// @mixin classes($map) {
//   @each $key, $val in $colors {
//     .#{map-get($val, name)} {
//       // Rules
//     }
//   }
// }

// @include classes($colors);

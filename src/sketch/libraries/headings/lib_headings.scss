// Material Design Palette Sketch Styles Generation
// Using Puzzle Tokens Sketch plugin and SASS
// version 1.0.1 by Marcelo Paiva (gh: mpaiva) and Juan Alvarado (gh: jalvarado91)


// Required SASS modules:
@use "sass:map";     // access values in arrays
@use "sass:color";   // color manipulation

// Dependencies:
@import "../../../styles/helpers/constants";
@import "../../../styles/helpers/functions";
@import "../../../styles/helpers/mixins";
@import "../../../styles/helpers/tokens";


//// Base colors

$colors: (
    ¹night:               $sk305-bodyAtNight,
    ¹day:                 $sk305-bodyAtDay,
    ²primary:             $sk305-primary,
    ²secondary:           $sk305-secondary,
    ³danger:              $sk305-danger,
    ³warning:             $sk305-warning,
    ³success:             $sk305-success
);

// Fonts

$fontFamily:           $sk305-fontFamily;
$lineHeight:           $sk305-lineHeightTight;

$formFactor:           desktop;

$fontSize: (
    heading-1:          rem-to-px($sk305-fontSize-36),
    heading-2:          rem-to-px($sk305-fontSize-30),
    heading-3:          rem-to-px($sk305-fontSize-24),
    heading-4:          rem-to-px($sk305-fontSize-18),
    heading-5:          rem-to-px($sk305-fontSize-16),
    heading-6:          rem-to-px($sk305-fontSize-12)
);

$textAlign: left, right, center;


// Texts generation: Size/Alignment/Color

@each $ks,$vs in $fontSize {

    .#{$formFactor} {
        .#{$ks} {
            @each $va in $textAlign {
                $ia: index(($textAlign), ($va));
                .#{$va} {
                    @each $key, $value in $colors {
                        .#{$key} {
                            color: $value;
                            font-size: $vs;
                            font-weight: $sk305-fontWeightBlack;
                            font-family: $fontFamily;
                            text-align: $va;
                            vertical-align: middle;
                            line-height: ($lineHeight);
                            border-color: transparent;
                            letter-spacing: ($vs/($lineHeight*64));
                            text-transform: capitalize;
                            
                            // set different style for heading-6 
                            @if $ks == 'heading-6' { 
                                text-transform: uppercase;
                                font-weight: $sk305-fontWeightLight;
                                font-family: $sk305-fontFamily;
                            }

                        }
                    }
                }
            }
        }
    }
}
